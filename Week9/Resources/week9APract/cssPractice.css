/* @font-face ( to pick a font on Google go to 'https://fonts.google.com/' and click '+ Select this style', click @import for CSS*/
@import url('https://fonts.googleapis.com/css2?family=MuseoModerno&display=swap');

/* Type Selector */
/* div {
  background-color: lavenderblush;
  font-size: 1.5rem;
} */

/* Class Selector */
.active {
  color: #fff;
}

/* ID Selector */
#list-1 {
  border: 1px solid gray;
}

/* Universal Selector */
/* * {
  padding: 0;
} */

/* Attribute Selector  */
a[title] {
  font-size: 2em;
}

.boxy {
  border-radius: 4px;
  box-shadow: 0 2px gray; /* offset - x | offset - y | color */
  filter: blur(2px);
  background-color: #000;
  opacity: 0.2;
}

/* Combine classes to get a specific element  */

.box.yellow {
  background-color: yellow;
}

.box.orange {
  background-color: orangered;
  color: #0ff;
}

.circle.orange {
  border-radius: 20px;
  background-color: orange;
}

.yellow {
  background-color: lightgoldenrodyellow;
}

.orange {
  background-color: darkorange;
}

h1, h2 {
  font-style: bold;
}

h1#heading, h2.subheadings {
  font-style: italic;
}

/* Descendants: */
p abbr { text-transform: uppercase; }

/* Adjacent Siblings */
h1 + h2 { font-style: italic; }

/* Direct Child Selectors */
.menu > .is-active { background-color: indigo;}

/* pseudo-class - add functionality to a selector like hover means when you hover over an element this will be applied: */
a:hover {
  font-family: 'MuseoModerno', cursive;
  color: #4fc3f7;
  text-decoration: none;
  border-bottom: 2px solid #4fc3f7;
}

/* pseudo-selectors or pseudo elements */
p::before {
  background-color: lightseagreen;
  border-right: 4px solid violet;
  content: ':)';
  margin-right: 4px;
  padding-left: 4px;
}


li::after {
  background-color: lightseagreen;
  border-left: maroon;
  content: '(:';
  margin-left: 4px;
  padding-left: 4px;
}

/* CSS Rules Specificity: (trying to figure out which CSS Rule an element will use) */
/* .box {
  width: 50px;
  height: 50px;
  border: 4px solid darkgreen;
} */
.purple { background-color: darkorchid;}
.green { background-color: darkolivegreen; border: 4px solid purple; }

/* CSS: Type, Properties And Imports */
/* font families stuff */
/* font- family: 'Times New Roman'; */
/* font-family: 'Helvetica Neue', 'Helvetica', sans serif; */

/* Using @font-face in a class selector*/
.MuseoModerno { font-family: 'MuseoModerno', cursive; }

font-style is only used for italics { font-style: italic; }
font-weight is only used for making bold text { font-weight: bold; }
or { font-weight: normal; }
or { font-weight: lighter; }
or {font-weight: bolder; }
/* or numeric balues from 100 - 900, 400 is normal, 700 is bold  */

.bold { font-weight: bolder; }
.also-bold { font-weight: 900; }

/* text-align: left, center, right, or justify */
.text-align { text-align: right; }

/* text-decoration: solid, dashed, or wavy, or lines above, through and under the text */
a { text-decoration: wavy olive underline; }

/* Casing your text */
/* with text-transform: uppercase, lowercase, capitalize; */
.loud { text-transform: uppercase; }
.soft { text-transform: lowercase; }
.title { text-transform: capitalize; }

/* CSS images: */
#aa-logo {
  background-color: lightslategray;
  background-image: url('https://appacademy.github.io/styleguide/assets/logo/logo-emblem-black-1000.png');
  background-size: cover;
  height: 100px;
  width:  100px;
}

/* CSS: COLORS, BORDERS, AND SHADOWS */
/* common way to make something look underlined on a webpage: */
.underlined { border-bottom: 1px solid black; }
.boxShadowPractice { box-shadow: 6px 6px 10px lightsteelblue; }
.textShadowPractice { text-shadow: 4px 4px 8px lightslategrey; }

/* CSS: THE BOX MODEL */
/* add box-sizing to change the default value of content box (sizing a box's content only) to border-box (sizing a box to include content, padding, and border) */
.boxSizingPractice {
  border: 10px solid black;
  box-sizing: border-box; /* includes content, padding, border */
  height: 100px;
  width: 250px;
  margin: 50px;
  padding: 25px;
}

/* inline-block */
.inlineBlockPractice {
  display: inline-block;
  width: 390px;
  height: 100px;
}

/* Padding: */
/* An element can INHERIT padding properties set in its container */
/* or can use UNSET to clear the previously set padding */
.paddingPractice { padding: inherit } /* inherits padding measurements from it container */
.paddingPractice2 { padding: unset } /* unsets or clears the previously set padding */

.box-parent {
  background-color: #000;
  width: 300px;
  height: 300px;


}

.box-child {
  background-color: #ff0;
  width: 100px;
  height: 280px;
  padding: 10px;
}

/* Positioning Elements: static, relative, absolute, fixed, sticky */

.container {
  background-color: #2b2d2f;
  /* position: fixed; */
}

.element {
  /* box-sizing: border-box; */
  /* display: flex; */
  width: auto;
  height: 80px;
  font-size: 36px;
}

#yellow-box { background-color: #ffff00; }
#pink-box {
  background-color: #ff69b4;
  /* bottom: 0; */
  /* left: 300px; */
  /* position: sticky; */
  /* top: 60px; */
  /* left: 0; */
  /* bottom: 60px; */
}

#blue-box {
  background-color: #00eeee;
  /* position: absolute; */
}

/* FLEXBOX PRACTICE: */
.containerFlex-Parent {
  display: flex; /* OR inline-flex? */
  flex-wrap: wrap;
  /* OR nowrap OR wrap-reverse */
  /* by default items will fit into one line */
  flex-direction: row;
   /* OR row-reverse OR column OR column-reverse */
   justify-content: space-evenly;
}

.item1 {
  order: 1;
  flex-grow: .5;
}
.item2 {
  order: 2;
}
.item3 {
  order: 3;
}

.containerGrid-Parent {
  display: grid; /* OR inline-grid? */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: auto;
  grid-template-areas:
    'header header header'
    'main main sidebar'
    'footer footer footer';
  grid-gap: 7px 5px;
  background-color: mediumaquamarine;
  justify-items: stretch; /* default is stretch*/
  /* could be changed to start | end | center */
  align-items: stretch; /* default is stretch */
  /* could be changed to start | end | center */
  justify-content: flex-start; /* horizontal whole grid alignment */
  align-content: center; /* vertical whole grid alignment */
  /* flex-start, flex-end, center, stretch, space-around, space-between, space-evenly */
  grid-auto-columns: 100px;
  grid-auto-rows: 50px; /* grid auto is to spread extra grid items to the grid that is not explicitly defined */
  grid-auto-flow: row /* default, fills in each row then adds a new row. Other values: columns, and dense. dense fills in spaces earlier in teh grid if smaller items come up later(beware: might make grid items appear out of order */
  /* grid-template => shorthand for grid-template-rows, gird-template-columns and grid-template-areas */
  /* grid-gap => shorthand for grid-column-gap and grid-row-gap */
/* place-items => shorthand justify-items and align-items */
/* place-content => shorthand for justify-content and align content (whole entire grid within grid div) */
/* grid => shorthand for grid-template, grid-auto-columns, grid-auto-rows, grid-auto-flow (you can create the entire grid with this one property) */
}

.item1 {
  grid-area: header;
  background-color: wheat;
}

.item2 {
  grid-area: main;
  background-color: palevioletred;
}

.item3 {
  grid-area: sidebar;
  background-color: palegreen;
  align-self: stretch; /* OR start | end | center */
}

.item4 {
  grid-area: footer;
  background-color: lightsteelblue;
}

.item5 {
  grid-row-start: row2-start; /* name */
  grid-row-end: 5; /* item ends at row line 5 */
  grid-column-start: 1;
  grid-column-end: three; /* item ends at column line named "three" */
}

.item6 {
  grid-row-start: 1;
  grid-row-end: span 2; /* item spans two rows  */
  grid-column-start: 3;
  grid-column-end: span col5-start; /* itmes spans and ends at line named "col5-start" */
}

.item {
  grid-area: row1-start / col4-start / 5 / span 3;
}
/*
@media screen and (min-width: 768px) {
  html { font-size: 14px; }
}

@media print {
  html {
    font-size: 12pt;
  }
}

body {
  font-size: 14px;
  display: flex;
}

@media (min-width: 1600px) {
  body {
    font-size: 18px;
  }
}

@media (max-width: 360px) {
  body {
    font-size: 10px;
  }
}

@media (orientation: landscape) {
  body { flex-direction: row; }
}

@media (orientation: protrait) {
  body { flex-direction: column; }
}

html {
  background-color: white;
  color: #333;
}

@media (min-width: 301px) and (max-width: 600px) {
  html {
    background-color: #333;
    color: white;
  }
}

html {
  background-color: #333;
  color: white;
}

@media (max-width: 300px), (min-width: 601px) {
  html {
    background-color: white;
    color: #333;
  }
}

@media not monochrome {
  body {
    background-color: magenta;
  }
} */

.btn {
  background-color: #0bf;
  color: #fff;
  border-radius: 10px;
  padding: 1.5rem;
}

.btn--active:hover {
  cursor: pointer;
  transform: translateY(-.25rem); /*  Moves our button up/down the Y axis */
}

#delay {
  font-size: 14px;
  transition-property: font-size;
  transition-duration: 4s;
  transition-delay: 2s;
}

#delay:hover { font-size: 36px; }

.box {
  background-color: lightskyblue;
  transition: width 2s, height 2s, background-color 2s, transform 2s;
}

.box:hover {
  background-color: lightgreen;
  transform: rotate(180deg);
}
